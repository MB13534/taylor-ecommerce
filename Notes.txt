make master folder
npx create-react-app frontend
move .gitignore from front to root
change '/node_modules' to:
  node_modules
  node_modules/
  ^this will make it so all node_modules folders will be ignored, since it will be in root and in back
downloaded the 'Minty' theme from bootswatch
installed react-bootstrap to front dependencies 

create backend directory
npm init in the root folder, install express

server.js
node js uses common js require syntax eg (const express = require('express'))
module.exports = products;

the import syntax is ES modules (import react from 'react')
export is (export default imports)
add {"type": "module} in root package.json /// you must have .js

proxy makes it so a front end axios call will look at localhost 5000 instead of 3000
proxy gets added to front package, restart server

the -D installs as dev
npm i -D nodemon concurrently
after installing nodemon make the scripts
    "server": "nodemon backend/server",
    "client": "npm start --prefix frontend",
    "dev": "concurrently \"npm run server\" \"npm run client\""
you have to escape the quotes in dev

we use bcrypts, not bcrypt

instead of putting a try catch in every call to the database, we use middleware called express-async-handler

middleware is a wrapped that can have access to all of the request response info.
it is defined in app.use((req, res, next) => {
  middleware
  next()
})
you call next to go to the next middleware

creating a new state
1. create constants
2. create reducer
3. update store
4. create action creator
5. useDispatch
6. useSelector
7. finish logic

to get into from the body, add bodyParser // app.use(express.json()) at server.js